#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import subprocess

request = json.load(sys.stdin)
user = request['user']

alteruser_cmd = ['podman', 'exec', '-i', 'openldap', 'alter-user']

if 'password' in request:
    alteruser_cmd += ['-p', '-']  # write password to helper's stdin

if 'groups' in request:
    alteruser_cmd += ['-g', ','.join(request['groups'])]

if 'display_name' in request:
    alteruser_cmd += ['-d', request['display_name']]

if 'locked' in request:
    if request['locked'] == True:
        alteruser_cmd += ['-l']
    else:
        alteruser_cmd += ['-u']

if 'mail' in request:
    alteruser_cmd += ['-m', request['mail']]

alteruser_cmd.append(user)

alter_user_result = subprocess.run(alteruser_cmd, input=request.get('password'), capture_output=True, text=True)

if alter_user_result.returncode == 0:
    json.dump({"status": "success", "message": "password_changed"}, fp=sys.stdout)
else:
    lmessage = alter_user_result.stdout + alter_user_result.stderr

    if 'Password fails quality checking policy' in lmessage:
        emessage = "error_password_complexity"
    elif 'Password is in history of old passwords' in lmessage:
        emessage = "error_password_history"
    elif 'Password is not being changed from existing value' in lmessage:
        emessage = "error_password_same"
    else:
        emessage = "error_unknown"

    print(lmessage, file=sys.stderr)
    json.dump({"status": "failure", "message": emessage}, fp=sys.stdout)
