#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import json
import subprocess

request = json.load(sys.stdin)
user = request['user']
domsuffix = os.environ['LDAP_SUFFIX']

# check if user already exists
testexists_cmd = ['podman', 'exec', '-i', 'openldap', 'ldapsearch',
                  '-s', 'base', '-b', f'uid={user},ou=People,{domsuffix}']
proc = subprocess.run(testexists_cmd, stdout=subprocess.DEVNULL,
                      stderr=subprocess.DEVNULL, text=True)
if proc.returncode == 0:
    json.dump({"status": "failure", "message": "", "error": [
              {'field': 'user', 'parameter': 'user', 'value': user, 'error': 'user_already_exists'}]}, fp=sys.stdout)
    sys.exit(2)

groups = request.get('groups', [])

# empty string implies a random password is set
password = request.get('password', '')
display_name = request.get('display_name', '')
locked = request.get('locked', False)
mail = request.get('mail', '')

# execute add user
adduser_cmd = ['podman', 'exec', '-i', 'openldap', 'add-user']

if groups:
    adduser_cmd += ['-g', ','.join(groups)]

if password:
    adduser_cmd += ['-p', '-']  # read password from stdin
else:
    password = None
    adduser_cmd += ['-p', '']  # generate a random password

if display_name:
    adduser_cmd += ['-d', display_name]

if mail:
    adduser_cmd += ['-m', mail]

adduser_cmd.append(user)

subprocess.run(adduser_cmd, input=password,
               stdout=sys.stderr, check=True, text=True)

if locked:
    lock_cmd = ['podman', 'exec', '-i', 'openldap', 'alter-user', '-l', user]
    subprocess.run(lock_cmd, stdout=sys.stderr, check=True, text=True)


json.dump({"status": "success", "message": "user_created"}, fp=sys.stdout)
